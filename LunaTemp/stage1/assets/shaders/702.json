{"id":702,"assetBundleId":-1,"data":[[],"WFX\/Scroll\/Multiply Soft Tint",null,["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO"],[[0,0,"",0,"",0,[4,null],[0,null],[0,null],[[2,null],[3,null],[0,null]],[[2,null],[3,null],[0,null]],[15,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO"],[],[[0,0,[],"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nattribute highp vec4 in_POSITION0;\nattribute mediump vec2 in_TEXCOORD0;\nattribute mediump vec4 in_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_COLOR0 = in_COLOR0;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tmediump vec4 _TintColor;\nuniform \tfloat _ScrollSpeed;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_1;\nbool u_xlatb2;\nvoid main()\n{\n    u_xlat0.x = _Time.x * _ScrollSpeed;\n    u_xlatb2 = u_xlat0.x>=(-u_xlat0.x);\n    u_xlat0.x = fract(abs(u_xlat0.x));\n    u_xlat0.x = (u_xlatb2) ? u_xlat0.x : (-u_xlat0.x);\n    u_xlat0.y = (-u_xlat0.x) + vs_TEXCOORD0.y;\n    u_xlat0.x = vs_TEXCOORD0.x;\n    u_xlat10_0 = texture2D(_MainTex, u_xlat0.xy);\n    u_xlat16_1.xyz = vs_COLOR0.xyz * _TintColor.xyz;\n    u_xlat1.xyz = u_xlat10_0.xyz * u_xlat16_1.xyz + vec3(-0.5, -0.5, -0.5);\n    u_xlat1.w = u_xlat10_0.w + -0.5;\n    u_xlat10_0.x = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat0.x = u_xlat10_0.x * vs_COLOR0.w;\n    u_xlat0 = u_xlat0.xxxx * u_xlat1 + vec4(0.5, 0.5, 0.5, 0.5);\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",0,0],[0,0,[],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nin highp vec4 in_POSITION0;\nin mediump vec2 in_TEXCOORD0;\nin mediump vec4 in_COLOR0;\nout highp vec2 vs_TEXCOORD0;\nout mediump vec4 vs_COLOR0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    vs_COLOR0 = in_COLOR0;\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 _Time;\nuniform \tmediump vec4 _TintColor;\nuniform \tfloat _ScrollSpeed;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nin highp vec2 vs_TEXCOORD0;\nin mediump vec4 vs_COLOR0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nmediump vec3 u_xlat16_1;\nbool u_xlatb2;\nvoid main()\n{\n    u_xlat0.x = _Time.x * _ScrollSpeed;\n    u_xlatb2 = u_xlat0.x>=(-u_xlat0.x);\n    u_xlat0.x = fract(abs(u_xlat0.x));\n    u_xlat0.x = (u_xlatb2) ? u_xlat0.x : (-u_xlat0.x);\n    u_xlat0.y = (-u_xlat0.x) + vs_TEXCOORD0.y;\n    u_xlat0.x = vs_TEXCOORD0.x;\n    u_xlat16_0 = texture(_MainTex, u_xlat0.xy);\n    u_xlat16_1.xyz = vs_COLOR0.xyz * _TintColor.xyz;\n    u_xlat1.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + vec3(-0.5, -0.5, -0.5);\n    u_xlat1.w = u_xlat16_0.w + -0.5;\n    u_xlat16_0.x = texture(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat0.x = u_xlat16_0.x * vs_COLOR0.w;\n    u_xlat0 = u_xlat0.xxxx * u_xlat1 + vec4(0.5, 0.5, 0.5, 0.5);\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",1,0]],[],0]],[],[["_TintColor",0,0.5,0.5,0.5,0.5,"",0],["_MainTex",4,0,0,0,0,"white",0],["_ScrollSpeed",2,2,0,0,0,"",0]],null,null,0,0,0]}