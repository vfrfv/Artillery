{"id":766,"assetBundleId":-1,"data":[[],"Custom\/Outline Fill",null,["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO"],[[0,0,"Fill",0,"",0,[0,"_ZTest"],[0,null],[0,null],[[5,null],[10,null],[0,null]],[[5,null],[10,null],[0,null]],[14,null],[0,null],[0,null],[1,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[6,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["DisableBatching","true"],["QUEUE","Transparent+110"],["RenderType","Transparent"]],["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO"],[],[[0,0,[],"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec3 in_TEXCOORD3;\nvarying mediump vec4 vs_COLOR0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nfloat u_xlat9;\nbool u_xlatb9;\nvoid main()\n{\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat0.xyz;\n    u_xlat9 = dot(in_TEXCOORD3.xyz, in_TEXCOORD3.xyz);\n    u_xlatb9 = u_xlat9!=0.0;\n    u_xlat1.xyz = (bool(u_xlatb9)) ? in_TEXCOORD3.xyz : in_NORMAL0.xyz;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www + u_xlat2.xyz;\n    u_xlat0.y = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat2.xyz;\n    u_xlat0.z = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * u_xlat1.xxx + u_xlat2.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz * u_xlat1.zzz + u_xlat2.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz * u_xlat1.www + u_xlat1.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * (-u_xlat1.zzz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(_OutlineWidth);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(0.00100000005, 0.00100000005, 0.00100000005) + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4glstate_matrix_projection[1];\n    u_xlat1 = hlslcc_mtx4x4glstate_matrix_projection[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4glstate_matrix_projection[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = u_xlat0 + hlslcc_mtx4x4glstate_matrix_projection[3];\n    vs_COLOR0 = _OutlineColor;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nvarying mediump vec4 vs_COLOR0;\n#define SV_Target0 gl_FragData[0]\nvoid main()\n{\n    SV_Target0 = vs_COLOR0;\n    return;\n}\n\n",0,0],[0,0,[],"\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nin highp vec4 in_POSITION0;\nin highp vec3 in_NORMAL0;\nin highp vec3 in_TEXCOORD3;\nout mediump vec4 vs_COLOR0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nfloat u_xlat9;\nbool u_xlatb9;\nvoid main()\n{\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat0.xyz;\n    u_xlat9 = dot(in_TEXCOORD3.xyz, in_TEXCOORD3.xyz);\n    u_xlatb9 = u_xlat9!=0.0;\n    u_xlat1.xyz = (bool(u_xlatb9)) ? in_TEXCOORD3.xyz : in_NORMAL0.xyz;\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www + u_xlat2.xyz;\n    u_xlat0.y = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat2.xyz;\n    u_xlat0.z = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    u_xlat1 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * u_xlat1.xxx + u_xlat2.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz * u_xlat1.zzz + u_xlat2.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz * u_xlat1.www + u_xlat1.xyz;\n    u_xlat0.xyz = u_xlat0.xyz * (-u_xlat1.zzz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(_OutlineWidth);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(0.00100000005, 0.00100000005, 0.00100000005) + u_xlat1.xyz;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4glstate_matrix_projection[1];\n    u_xlat1 = hlslcc_mtx4x4glstate_matrix_projection[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4glstate_matrix_projection[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = u_xlat0 + hlslcc_mtx4x4glstate_matrix_projection[3];\n    vs_COLOR0 = _OutlineColor;\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\nin mediump vec4 vs_COLOR0;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvoid main()\n{\n    SV_Target0 = vs_COLOR0;\n    return;\n}\n\n",1,0]],[],0]],[],[["_ZTest",2,0,0,0,0,"",0],["_OutlineColor",0,1,1,1,1,"",0],["_OutlineWidth",3,2,0,10,0,"",0]],null,null,0,0,0]}