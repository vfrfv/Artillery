["\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    vs_TEXCOORD1.w = u_xlat0.x;\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;\n    vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.x = u_xlat2.z;\n    vs_TEXCOORD1.z = u_xlat1.y;\n    vs_TEXCOORD2.x = u_xlat2.x;\n    vs_TEXCOORD3.x = u_xlat2.y;\n    vs_TEXCOORD2.z = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat1.x;\n    vs_TEXCOORD2.w = u_xlat0.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD2.y = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat3.z;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _BumpMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_4;\nmediump float u_xlat16_10;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_10 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_10 = min(u_xlat16_10, 1.0);\n    u_xlat16_10 = (-u_xlat16_10) + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_10);\n    u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);\n    u_xlat0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 * _Color;\n    u_xlat16_4.xyz = u_xlat0.xyz * _LightColor0.xyz;\n    SV_Target0.w = u_xlat0.w;\n    SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;\n    return;\n}\n\n","\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin highp vec4 in_TANGENT0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    vs_TEXCOORD1.w = u_xlat0.x;\n    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;\n    u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;\n    vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.x = u_xlat2.z;\n    vs_TEXCOORD1.z = u_xlat1.y;\n    vs_TEXCOORD2.x = u_xlat2.x;\n    vs_TEXCOORD3.x = u_xlat2.y;\n    vs_TEXCOORD2.z = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat1.x;\n    vs_TEXCOORD2.w = u_xlat0.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD2.y = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat3.z;\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _BumpMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_4;\nmediump float u_xlat16_10;\nvoid main()\n{\n    u_xlat16_0.xy = texture(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_1.xy = u_xlat16_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_10 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_10 = min(u_xlat16_10, 1.0);\n    u_xlat16_10 = (-u_xlat16_10) + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_10);\n    u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);\n    u_xlat0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat16_0 * _Color;\n    u_xlat16_4.xyz = u_xlat0.xyz * _LightColor0.xyz;\n    SV_Target0.w = u_xlat0.w;\n    SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;\n    return;\n}\n\n","\n#version 100\n\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying mediump vec3 vs_TEXCOORD4;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nfloat u_xlat18;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    vs_TEXCOORD1.w = u_xlat0.x;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat2 = vec4(u_xlat18) * u_xlat2.xyzz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;\n    u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);\n    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;\n    vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.x = u_xlat1.z;\n    vs_TEXCOORD1.z = u_xlat2.x;\n    vs_TEXCOORD2.x = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat1.y;\n    vs_TEXCOORD2.w = u_xlat0.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD2.y = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD2.z = u_xlat2.y;\n    vs_TEXCOORD3.z = u_xlat2.z;\n    u_xlat16_4.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);\n    u_xlat16_0 = u_xlat2.yzwx * u_xlat2.xywz;\n    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);\n    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;\n    u_xlat2.w = 1.0;\n    u_xlat16_5.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_5.y = dot(unity_SHAg, u_xlat2);\n    u_xlat16_5.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_4.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _BumpMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying mediump vec3 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_4;\nmediump float u_xlat16_10;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_10 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_10 = min(u_xlat16_10, 1.0);\n    u_xlat16_10 = (-u_xlat16_10) + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_10);\n    u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);\n    u_xlat0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 * _Color;\n    u_xlat16_4.xyz = u_xlat0.xyz * _LightColor0.xyz;\n    u_xlat16_2.xyz = u_xlat0.xyz * vs_TEXCOORD4.xyz;\n    SV_Target0.w = u_xlat0.w;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    return;\n}\n\n","\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin highp vec4 in_TANGENT0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout highp vec4 vs_TEXCOORD0;\nout highp vec4 vs_TEXCOORD1;\nout highp vec4 vs_TEXCOORD2;\nout highp vec4 vs_TEXCOORD3;\nout mediump vec3 vs_TEXCOORD4;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nfloat u_xlat18;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    vs_TEXCOORD1.w = u_xlat0.x;\n    u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat2 = vec4(u_xlat18) * u_xlat2.xyzz;\n    u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;\n    u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);\n    u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;\n    vs_TEXCOORD1.y = u_xlat3.x;\n    vs_TEXCOORD1.x = u_xlat1.z;\n    vs_TEXCOORD1.z = u_xlat2.x;\n    vs_TEXCOORD2.x = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat1.y;\n    vs_TEXCOORD2.w = u_xlat0.y;\n    vs_TEXCOORD3.w = u_xlat0.z;\n    vs_TEXCOORD2.y = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat3.z;\n    vs_TEXCOORD2.z = u_xlat2.y;\n    vs_TEXCOORD3.z = u_xlat2.z;\n    u_xlat16_4.x = u_xlat2.y * u_xlat2.y;\n    u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);\n    u_xlat16_0 = u_xlat2.yzwx * u_xlat2.xywz;\n    u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);\n    u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;\n    u_xlat2.w = 1.0;\n    u_xlat16_5.x = dot(unity_SHAr, u_xlat2);\n    u_xlat16_5.y = dot(unity_SHAg, u_xlat2);\n    u_xlat16_5.z = dot(unity_SHAb, u_xlat2);\n    u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;\n    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat1.xyz = log2(u_xlat16_4.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat1.xyz = exp2(u_xlat1.xyz);\n    u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD4.xyz = u_xlat1.xyz;\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _BumpMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec4 vs_TEXCOORD1;\nin highp vec4 vs_TEXCOORD2;\nin highp vec4 vs_TEXCOORD3;\nin mediump vec3 vs_TEXCOORD4;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_4;\nmediump float u_xlat16_10;\nvoid main()\n{\n    u_xlat16_0.xy = texture(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_1.xy = u_xlat16_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_10 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_10 = min(u_xlat16_10, 1.0);\n    u_xlat16_10 = (-u_xlat16_10) + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_10);\n    u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);\n    u_xlat0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat16_0 * _Color;\n    u_xlat16_4.xyz = u_xlat0.xyz * _LightColor0.xyz;\n    u_xlat16_2.xyz = u_xlat0.xyz * vs_TEXCOORD4.xyz;\n    SV_Target0.w = u_xlat0.w;\n    SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;\n    return;\n}\n\n","\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat2.xyz);\n    u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;\n    vs_TEXCOORD1.y = u_xlat2.x;\n    vs_TEXCOORD1.x = u_xlat1.z;\n    vs_TEXCOORD1.z = u_xlat0.y;\n    vs_TEXCOORD2.x = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat1.y;\n    vs_TEXCOORD2.z = u_xlat0.z;\n    vs_TEXCOORD3.z = u_xlat0.x;\n    vs_TEXCOORD2.y = u_xlat2.y;\n    vs_TEXCOORD3.y = u_xlat2.z;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _BumpMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec3 vs_TEXCOORD1;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_4;\nmediump float u_xlat16_10;\nvoid main()\n{\n    u_xlat10_0.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_1.xy = u_xlat10_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_10 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_10 = min(u_xlat16_10, 1.0);\n    u_xlat16_10 = (-u_xlat16_10) + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_10);\n    u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);\n    u_xlat0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 * _Color;\n    u_xlat16_4.xyz = u_xlat0.xyz * _LightColor0.xyz;\n    SV_Target0.w = u_xlat0.w;\n    SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;\n    return;\n}\n\n","\n#version 300 es\n\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _BumpMap_ST;\nin highp vec4 in_POSITION0;\nin highp vec4 in_TANGENT0;\nin highp vec3 in_NORMAL0;\nin highp vec4 in_TEXCOORD0;\nout highp vec4 vs_TEXCOORD0;\nout highp vec3 vs_TEXCOORD1;\nout highp vec3 vs_TEXCOORD2;\nout highp vec3 vs_TEXCOORD3;\nout highp vec3 vs_TEXCOORD4;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nfloat u_xlat9;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat9 = inversesqrt(u_xlat9);\n    u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;\n    u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat2.xyz);\n    u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;\n    vs_TEXCOORD1.y = u_xlat2.x;\n    vs_TEXCOORD1.x = u_xlat1.z;\n    vs_TEXCOORD1.z = u_xlat0.y;\n    vs_TEXCOORD2.x = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat1.y;\n    vs_TEXCOORD2.z = u_xlat0.z;\n    vs_TEXCOORD3.z = u_xlat0.x;\n    vs_TEXCOORD2.y = u_xlat2.y;\n    vs_TEXCOORD3.y = u_xlat2.z;\n    return;\n}\n\n","\n#version 300 es\n\nprecision highp float;\nprecision highp int;\n#define HLSLCC_ENABLE_UNIFORM_BUFFERS 0\n#if HLSLCC_ENABLE_UNIFORM_BUFFERS\n#define UNITY_UNIFORM\n#else\n#define UNITY_UNIFORM uniform\n#endif\n#define UNITY_SUPPORTS_UNIFORM_LOCATION 0\n#if UNITY_SUPPORTS_UNIFORM_LOCATION\n#define UNITY_LOCATION(x) layout(location = x)\n#define UNITY_BINDING(x) layout(binding = x, std140)\n#else\n#define UNITY_LOCATION(x)\n#define UNITY_BINDING(x) layout(std140)\n#endif\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nUNITY_LOCATION(0) uniform mediump sampler2D _MainTex;\nUNITY_LOCATION(1) uniform mediump sampler2D _BumpMap;\nin highp vec4 vs_TEXCOORD0;\nin highp vec3 vs_TEXCOORD1;\nin highp vec3 vs_TEXCOORD2;\nin highp vec3 vs_TEXCOORD3;\nlayout(location = 0) out mediump vec4 SV_Target0;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump vec3 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_4;\nmediump float u_xlat16_10;\nvoid main()\n{\n    u_xlat16_0.xy = texture(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_1.xy = u_xlat16_0.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_10 = dot(u_xlat16_1.xy, u_xlat16_1.xy);\n    u_xlat16_10 = min(u_xlat16_10, 1.0);\n    u_xlat16_10 = (-u_xlat16_10) + 1.0;\n    u_xlat16_1.z = sqrt(u_xlat16_10);\n    u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);\n    u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);\n    u_xlat0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat16_0 * _Color;\n    u_xlat16_4.xyz = u_xlat0.xyz * _LightColor0.xyz;\n    SV_Target0.w = u_xlat0.w;\n    SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;\n    return;\n}\n\n"]